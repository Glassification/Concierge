<Window x:Class="Concierge.Interface.OverviewPageUi.ModifySensesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Concierge.Interface.OverviewPageUi"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="ModifySensesWindow"
        Height="500"
        Width="650"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Background="#252526"
        ResizeMode="NoResize"
        KeyDown="Window_KeyDown"
        BorderThickness="1"
        BorderBrush="#706599"
        Style="{StaticResource WindowXboxDasboardStyle}">

    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border"
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border
                  Grid.Column="0"
                  CornerRadius="0"
                  Margin="1"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path
                  x:Name="Arrow"
                  Grid.Column="1"
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="13,3,23,3"
                            Focusable="True"
                            Background="#FF3F3F3F"
                            Foreground="White"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="385"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>

        <!--Header-->
        <Grid Grid.Row="0">
            <TextBlock Text="Edit Senses"
                       x:Name="HeaderTextBlock"
                       Foreground="#988CD0"
                       FontSize="35"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Margin="30, 0, 0, 0"
                       FontWeight="Bold"/>
            <Button x:Name="CloseButton"
                    Height="50"
                    Width="60"
                    Background="Transparent"
                    BorderBrush="{x:Null}"
                    Foreground="White"
                    ToolTip="Close"
                    HorizontalAlignment="Right"
                    Click="CloseButton_Click"
                    MouseEnter="Button_MouseEnter"
                    MouseLeave="Button_MouseLeave">
                <materialDesign:PackIcon Kind="WindowClose" Width="25" Height="25"/>
            </Button>
        </Grid>

        <!--Fields-->
        <Grid Grid.Row="1"
              Margin="5, 20, 5, 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
                <RowDefinition Height="14.2*"/>
            </Grid.RowDefinitions>

            <!--Initiative-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Initiative:"
                               Foreground="White"
                               FontSize="20"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1"
                      Background="#FF3F3F3F"
                      Margin="0, 8, 20, 8">
                    <TextBox x:Name="InitiativeTextBox"
                            Background="#FF3F3F3F"
                            Margin="5"
                            BorderThickness="0"
                            Foreground="White"
                            FontSize="15"
                            VerticalContentAlignment="Center"/>
                </Grid>
            </Grid>
            
            <!--Initiative Bonus-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Initiative Bonus:"
                               Foreground="White"
                               FontSize="16"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1">
                    <xctk:IntegerUpDown Name="InitiativeBonusUpDown"
                                        Background="#FF3F3F3F"
                                        BorderThickness="0"
                                        Foreground="White"
                                        FontSize="25"
                                        Margin="0, 0, 20, 0"
                                        Height="40"
                                        Minimum="0"/>
                </Grid>
            </Grid>

            <!--Perception-->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Perception:"
                               Foreground="White"
                               FontSize="20"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1"
                      Background="#FF3F3F3F"
                      Margin="0, 8, 20, 8">
                    <TextBox x:Name="PerceptionTextBox"
                            Background="#FF3F3F3F"
                            Margin="5"
                            BorderThickness="0"
                            Foreground="White"
                            FontSize="15"
                            VerticalContentAlignment="Center"/>
                </Grid>
            </Grid>

            <!--Perception Bonus-->
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Perception Bonus:"
                               Foreground="White"
                               FontSize="15"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1">
                    <xctk:IntegerUpDown Name="PerceptionBonusUpDown"
                                        Background="#FF3F3F3F"
                                        BorderThickness="0"
                                        Foreground="White"
                                        FontSize="25"
                                        Minimum="0"
                                        Margin="0, 0, 20, 0"
                                        Height="40"/>
                </Grid>
            </Grid>

            <!--Vision-->
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Vision:"
                                   Foreground="White"
                                   FontSize="20"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1">
                    <ComboBox Name="VisionComboBox"
                                  IsEditable="False"
                                  Height="40"
                                  Margin="0, 0, 20, 0"
                                  FontSize="15"/>
                </Grid>
            </Grid>

            <!--Movement-->
            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Movement:"
                               Foreground="White"
                               FontSize="20"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1"
                      Background="#FF3F3F3F"
                      Margin="0, 8, 20, 8">
                    <TextBox x:Name="MovementTextBox"
                            Background="#FF3F3F3F"
                            Margin="5"
                            BorderThickness="0"
                            Foreground="White"
                            FontSize="15"
                            VerticalContentAlignment="Center"/>
                </Grid>
            </Grid>

            <!--Base Movement-->
            <Grid Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="65*"/>
                </Grid.ColumnDefinitions>

                <!--Title-->
                <Grid Grid.Column="0">
                    <TextBlock Text="Base Movement:"
                               Foreground="White"
                               FontSize="16"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="10, 0, 0, 0"/>
                </Grid>

                <!--Value-->
                <Grid Grid.Column="1">
                    <xctk:IntegerUpDown Name="BaseMovementUpDown"
                                        Background="#FF3F3F3F"
                                        BorderThickness="0"
                                        Foreground="White"
                                        FontSize="25"
                                        Minimum="0"
                                        Margin="0, 0, 20, 0"
                                        Height="40"/>
                </Grid>
            </Grid>
        </Grid>

        <!--Buttons-->
        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                <Button x:Name="OkButton"
                        Style="{StaticResource PopupWindowButton}"
                        BorderBrush="{x:Null}"
                        Content="OK"
                        MouseEnter="Button_MouseEnter"
                        MouseLeave="Button_MouseLeave"
                        Click="OkButton_Click">
                </Button>
                <Button x:Name="ApplyButton"
                        Style="{StaticResource PopupWindowButton}"
                        BorderBrush="{x:Null}"
                        Content="Apply"
                        MouseEnter="Button_MouseEnter"
                        MouseLeave="Button_MouseLeave"
                        Click="ApplyButton_Click">
                </Button>
                <Button x:Name="CancelButton"
                        BorderBrush="{x:Null}"
                        Content="Cancel"
                        Click="CancelButton_Click"
                        MouseEnter="Button_MouseEnter"
                        MouseLeave="Button_MouseLeave"
                        Style="{StaticResource PopupWindowButton}">
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
