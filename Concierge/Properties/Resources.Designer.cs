//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Concierge.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Concierge.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger for activating this ability..
        /// </summary>
        internal static string AbilitiesWindow_ActionTextBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_ActionTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level required for learning this ability..
        /// </summary>
        internal static string AbilitiesWindow_LevelUpDown {
            get {
                return ResourceManager.GetString("AbilitiesWindow_LevelUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every ability probably has a name..
        /// </summary>
        internal static string AbilitiesWindow_NameComboBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_NameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any extra information describing the ability..
        /// </summary>
        internal static string AbilitiesWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to replenish uses for this ability..
        /// </summary>
        internal static string AbilitiesWindow_RecoveryTextBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_RecoveryTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which category list this ability comes from..
        /// </summary>
        internal static string AbilitiesWindow_TypeComboBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_TypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of times this ability can be used before it is exhausted..
        /// </summary>
        internal static string AbilitiesWindow_UsesTextBox {
            get {
                return ResourceManager.GetString("AbilitiesWindow_UsesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Ability {
            get {
                object obj = ResourceManager.GetObject("Ability", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AboutBanner {
            get {
                object obj = ResourceManager.GetObject("AboutBanner", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lawful Good
        ///Neutral Good
        ///Chaotic Good
        ///Lawful Neutral
        ///True Neutral
        ///Chaotic Neutral
        ///Lawful Evil
        ///Neutral Evil
        ///Chaotic Evil.
        /// </summary>
        internal static string Alignment {
            get {
                return ResourceManager.GetString("Alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A character should be older than 0, and probably at least the age of majority for their race..
        /// </summary>
        internal static string AppearanceWindow_AgeUpDown {
            get {
                return ResourceManager.GetString("AppearanceWindow_AgeUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give the character an unusual or memorable physical characteristic. Such as a scar, limp, or tattoo..
        /// </summary>
        internal static string AppearanceWindow_DistinguishingMarksTextBox {
            get {
                return ResourceManager.GetString("AppearanceWindow_DistinguishingMarksTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a distinctive eye colour..
        /// </summary>
        internal static string AppearanceWindow_EyeColorPreview {
            get {
                return ResourceManager.GetString("AppearanceWindow_EyeColorPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a distinctive eye colour..
        /// </summary>
        internal static string AppearanceWindow_EyeColourTextBox {
            get {
                return ResourceManager.GetString("AppearanceWindow_EyeColourTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A strong and tough character might be tall or just heavy..
        /// </summary>
        internal static string AppearanceWindow_FeetUpDown {
            get {
                return ResourceManager.GetString("AppearanceWindow_FeetUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Male, female, or even &apos;other&apos; characters don&apos;t gain any special benefits or hindrances..
        /// </summary>
        internal static string AppearanceWindow_GenderComboBox {
            get {
                return ResourceManager.GetString("AppearanceWindow_GenderComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose an interesting hair colour..
        /// </summary>
        internal static string AppearanceWindow_HairColorPreview {
            get {
                return ResourceManager.GetString("AppearanceWindow_HairColorPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose an interesting hair colour..
        /// </summary>
        internal static string AppearanceWindow_HairColourTextBox {
            get {
                return ResourceManager.GetString("AppearanceWindow_HairColourTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A strong and tough character might be tall or just heavy..
        /// </summary>
        internal static string AppearanceWindow_InchesUpDown {
            get {
                return ResourceManager.GetString("AppearanceWindow_InchesUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a reasonable skin colour. Or don&apos;t. I&apos;m just text, I can&apos;t stop you..
        /// </summary>
        internal static string AppearanceWindow_SkinColorPreview {
            get {
                return ResourceManager.GetString("AppearanceWindow_SkinColorPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a reasonable skin colour. Or don&apos;t. I&apos;m just text, I can&apos;t stop you..
        /// </summary>
        internal static string AppearanceWindow_SkinColourTextBox {
            get {
                return ResourceManager.GetString("AppearanceWindow_SkinColourTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A weak but agile character might be thin..
        /// </summary>
        internal static string AppearanceWindow_WeightUpDown {
            get {
                return ResourceManager.GetString("AppearanceWindow_WeightUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Armor {
            get {
                object obj = ResourceManager.GetObject("Armor", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The armor&apos;s base AC without any modifiers added..
        /// </summary>
        internal static string ArmorWindow_ArmorClassUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_ArmorClassUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This could be the generic type of armor equipped, or a spectacular named set of armor. Or anything in between..
        /// </summary>
        internal static string ArmorWindow_ArmorNameComboBox {
            get {
                return ResourceManager.GetString("ArmorWindow_ArmorNameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total of any magic bonuses that affect Armor Class..
        /// </summary>
        internal static string ArmorWindow_MagicArmorClassUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_MagicArmorClassUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total of any status bonuses that affect Armor Class..
        /// </summary>
        internal static string ArmorWindow_MiscArmorClassUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_MiscArmorClassUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wielding a shield normally increases AC by 2..
        /// </summary>
        internal static string ArmorWindow_ShieldArmorClassUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_ShieldArmorClassUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usually made from wood or metal and carried in one hand..
        /// </summary>
        internal static string ArmorWindow_ShieldTextBox {
            get {
                return ResourceManager.GetString("ArmorWindow_ShieldTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generally weighs more than 0..
        /// </summary>
        internal static string ArmorWindow_ShieldWeightUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_ShieldWeightUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unequipped armor will not provide any bonus or armor class improvements..
        /// </summary>
        internal static string ArmorWindow_StatusComboBox {
            get {
                return ResourceManager.GetString("ArmorWindow_StatusComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if the wearer has disadvantage on stealth checks..
        /// </summary>
        internal static string ArmorWindow_StealthComboBox {
            get {
                return ResourceManager.GetString("ArmorWindow_StealthComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Armor reduces speed by 10 unless the strength score is equal to or greater than listed score..
        /// </summary>
        internal static string ArmorWindow_StrengthUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_StrengthUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light, Medium, or Heavy armor..
        /// </summary>
        internal static string ArmorWindow_TypeComboBox {
            get {
                return ResourceManager.GetString("ArmorWindow_TypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contrary to popular belief, heavy armor will weigh more..
        /// </summary>
        internal static string ArmorWindow_WeightUpDown {
            get {
                return ResourceManager.GetString("ArmorWindow_WeightUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most weapons require strength to use, but finesse weapons allow a character to use their dexterity score. Special weapons or statuses might allow other abilities to be used instead..
        /// </summary>
        internal static string AttacksWindow_AbilityComboBox {
            get {
                return ResourceManager.GetString("AttacksWindow_AbilityComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your race, class, and feats can grant you proficiency with certain weapons or categories of weapons..
        /// </summary>
        internal static string AttacksWindow_AttackComboBox {
            get {
                return ResourceManager.GetString("AttacksWindow_AttackComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets whether a character has bonded with this weapon, and if it counts towards the attunement limit..
        /// </summary>
        internal static string AttacksWindow_AttunedCheckBox {
            get {
                return ResourceManager.GetString("AttacksWindow_AttunedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the denomination so you don&apos;t have to worry about math..
        /// </summary>
        internal static string AttacksWindow_CoinTypeComboBox {
            get {
                return ResourceManager.GetString("AttacksWindow_CoinTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List the damage rolls and proficiency bonus to attacking with this weapon..
        /// </summary>
        internal static string AttacksWindow_DamageTextBox {
            get {
                return ResourceManager.GetString("AttacksWindow_DamageTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some creatures and objects are exceedingly difficult or unusually easy to hurt with certain types of damage..
        /// </summary>
        internal static string AttacksWindow_DamageTypeComboBox {
            get {
                return ResourceManager.GetString("AttacksWindow_DamageTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is generally used to &apos;place&apos; the weapon in a bag of holding..
        /// </summary>
        internal static string AttacksWindow_IgnoreWeightCheckBox {
            get {
                return ResourceManager.GetString("AttacksWindow_IgnoreWeightCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here, you can use my plus 1 mace..
        /// </summary>
        internal static string AttacksWindow_MiscDamageTextBox {
            get {
                return ResourceManager.GetString("AttacksWindow_MiscDamageTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Many weapons have special properties related to their use, as shown in the Weapons table..
        /// </summary>
        internal static string AttacksWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("AttacksWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force this weapon to add your character&apos;s proficiency bonus..
        /// </summary>
        internal static string AttacksWindow_ProficencyOverrideCheckBox {
            get {
                return ResourceManager.GetString("AttacksWindow_ProficencyOverrideCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far you can strike enemies with this weapon. Ranged weapons have minimum and maximum effective ranges..
        /// </summary>
        internal static string AttacksWindow_RangeTextBox {
            get {
                return ResourceManager.GetString("AttacksWindow_RangeTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifying the type of weapon allows Concierge to automatically attempt to calculate proficiency bonuses. Most people can use simple weapons with proficiency, however, martial weapons require more specialized training to use effectively..
        /// </summary>
        internal static string AttacksWindow_TypeComboBox {
            get {
                return ResourceManager.GetString("AttacksWindow_TypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The worth of this weapon. Even your fists have value to someone..
        /// </summary>
        internal static string AttacksWindow_ValueUpDown {
            get {
                return ResourceManager.GetString("AttacksWindow_ValueUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bro, do you even lift?.
        /// </summary>
        internal static string AttacksWindow_WeightUpDown {
            get {
                return ResourceManager.GetString("AttacksWindow_WeightUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Confidence, eloquence, leadership. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_CharismaUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_CharismaUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Health, stamina, vital force. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_ConstitutionUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_ConstitutionUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Physical agility, reflexes, balance, poise. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_DexterityUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_DexterityUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Mental acuity, information recall, analytical skill. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_IntelligenceUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_IntelligenceUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Natural athleticism, bodily power. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_StrengthUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_StrengthUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Awareness, intuition, insight. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string AttributesWindow_WisdomUpDown {
            get {
                return ResourceManager.GetString("AttributesWindow_WisdomUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Augmentation {
            get {
                object obj = ResourceManager.GetObject("Augmentation", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add any extra damage, status effects, or behaviors here..
        /// </summary>
        internal static string AugmentationWindow_BonusTextBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_BonusTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the type of wound this projectile will cause..
        /// </summary>
        internal static string AugmentationWindow_DamageTypeComboBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_DamageTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Many ammunition types have special properties related to their use, as shown in the ammunition table..
        /// </summary>
        internal static string AugmentationWindow_DescriptionTextBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_DescriptionTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the icon that will be displayed in character sheet..
        /// </summary>
        internal static string AugmentationWindow_EditIconButton {
            get {
                return ResourceManager.GetString("AugmentationWindow_EditIconButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use a weapon that has the ammunition property to make a ranged attack only if you have ammunition to fire from the weapon. Drawing the ammunition from a quiver, case, or other container is part of the attack..
        /// </summary>
        internal static string AugmentationWindow_NameComboBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_NameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Carried amount of ammunition before starting an engagement..
        /// </summary>
        internal static string AugmentationWindow_QuantityUpDown {
            get {
                return ResourceManager.GetString("AugmentationWindow_QuantityUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At the end of the battle, you can recover half your expended ammunition by taking a minute to search the battlefield..
        /// </summary>
        internal static string AugmentationWindow_RecoverableCheckBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_RecoverableCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Augment source that granted the ability..
        /// </summary>
        internal static string AugmentationWindow_TypeComboBox {
            get {
                return ResourceManager.GetString("AugmentationWindow_TypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each time you attack with the weapon, you expend one piece of ammunition..
        /// </summary>
        internal static string AugmentationWindow_UsedUpDown {
            get {
                return ResourceManager.GetString("AugmentationWindow_UsedUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1
        ///5
        ///10
        ///15
        ///20
        ///30
        ///45
        ///60
        ///90
        ///120.
        /// </summary>
        internal static string AutosaveInterval {
            get {
                return ResourceManager.GetString("AutosaveInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acolyte
        ///Anthropologist
        ///Archaeologist
        ///Athlete 
        ///Caravan Specialist
        ///Charlatan
        ///City Watch
        ///Cloistered Scholar
        ///Courtier
        ///Criminal
        ///Entertainer
        ///Failed Merchant
        ///Folk Hero
        ///Gambler
        ///Guild Artisan
        ///Harborfolk
        ///Haunted One
        ///Hermit
        ///Inheritor
        ///Initiate
        ///Inquisitor
        ///Investigator
        ///Knight
        ///Noble
        ///Outlander
        ///Pirate
        ///Sage
        ///Sailor
        ///Soldier
        ///Urchin.
        /// </summary>
        internal static string Background {
            get {
                return ResourceManager.GetString("Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adventuring Gear
        ///Arcane Focus
        ///Clothing
        ///Druidic Focus
        ///Equipment Pack
        ///Food/Drink
        ///Gemstone
        ///Heavy Armor
        ///Holy Symbol
        ///Key
        ///Light Armor
        ///Medium Armor
        ///Mount
        ///Poison
        ///Potion
        ///Scroll
        ///Shield
        ///Tool
        ///Vehicle (Land)
        ///Vehicle (Water).
        /// </summary>
        internal static string Category {
            get {
                return ResourceManager.GetString("Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Class {
            get {
                object obj = ResourceManager.GetObject("Class", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any extra information to help Danial so he remembers to rage..
        /// </summary>
        internal static string ClassResourceWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("ClassResourceWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum available resources..
        /// </summary>
        internal static string ClassResourceWindow_PoolUpDown {
            get {
                return ResourceManager.GetString("ClassResourceWindow_PoolUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How fast can your character recover their spent resources..
        /// </summary>
        internal static string ClassResourceWindow_RecoveryComboBox {
            get {
                return ResourceManager.GetString("ClassResourceWindow_RecoveryComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not every class has resources to spend. Only the cool ones..
        /// </summary>
        internal static string ClassResourceWindow_ResourceNameComboBox {
            get {
                return ResourceManager.GetString("ClassResourceWindow_ResourceNameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently used resources..
        /// </summary>
        internal static string ClassResourceWindow_SpentUpDown {
            get {
                return ResourceManager.GetString("ClassResourceWindow_SpentUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ColorPickerBackground {
            get {
                object obj = ResourceManager.GetObject("ColorPickerBackground", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most weapons use strength, but some attacks allow a companion to use their dexterity score. Special weapons or statuses might allow other abilities to be used instead..
        /// </summary>
        internal static string CompanionAttacksWindow_AbilityComboBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_AbilityComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your companion&apos;s race, class, and feats can grant you proficiency with certain weapons or categories of weapons..
        /// </summary>
        internal static string CompanionAttacksWindow_AttackComboBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_AttackComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List the damage rolls and proficiency bonus to attacking with this attack..
        /// </summary>
        internal static string CompanionAttacksWindow_DamageTextBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_DamageTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some creatures and objects are exceedingly difficult or unusually easy to hurt with certain types of damage..
        /// </summary>
        internal static string CompanionAttacksWindow_DamageTypeComboBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_DamageTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here, you can use my plus 1 mace..
        /// </summary>
        internal static string CompanionAttacksWindow_MiscDamageTextBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_MiscDamageTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Many weapons have special properties related to their use, as shown in the Weapons table..
        /// </summary>
        internal static string CompanionAttacksWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add your character&apos;s proficiency bonus to this attack..
        /// </summary>
        internal static string CompanionAttacksWindow_ProficencyOverrideCheckBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_ProficencyOverrideCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far you can strike enemies with this weapon. Ranged weapons have minimum and maximum effective ranges..
        /// </summary>
        internal static string CompanionAttacksWindow_RangeTextBox {
            get {
                return ResourceManager.GetString("CompanionAttacksWindow_RangeTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Confidence, eloquence, leadership. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_CharismaUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_CharismaUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Health, stamina, vital force. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_ConstitutionUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_ConstitutionUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Physical agility, reflexes, balance, poise. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_DexterityUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_DexterityUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Mental acuity, information recall, analytical skill. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_IntelligenceUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_IntelligenceUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Natural athleticism, bodily power. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_StrengthUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_StrengthUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Measures: Awareness, intuition, insight. Maximum of 30, but cannot be raised above 20 without special traits or equipment..
        /// </summary>
        internal static string CompanionAttributesWindow_WisdomUpDown {
            get {
                return ResourceManager.GetString("CompanionAttributesWindow_WisdomUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Armor Class of the companion..
        /// </summary>
        internal static string CompanionWindow_AcUpDown {
            get {
                return ResourceManager.GetString("CompanionWindow_AcUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Soviet Russia, companion ride you..
        /// </summary>
        internal static string CompanionWindow_CreatureSizeComboBox {
            get {
                return ResourceManager.GetString("CompanionWindow_CreatureSizeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total initiative score for the companion..
        /// </summary>
        internal static string CompanionWindow_InitiativeUpDown {
            get {
                return ResourceManager.GetString("CompanionWindow_InitiativeUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total movement speed for the companion..
        /// </summary>
        internal static string CompanionWindow_MovementUpDown {
            get {
                return ResourceManager.GetString("CompanionWindow_MovementUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, an albino owl might be called &quot;Al&quot;..
        /// </summary>
        internal static string CompanionWindow_NameTextBox {
            get {
                return ResourceManager.GetString("CompanionWindow_NameTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total score to a companion&apos;s awareness..
        /// </summary>
        internal static string CompanionWindow_PerceptionUpDown {
            get {
                return ResourceManager.GetString("CompanionWindow_PerceptionUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual traits granted to the companion..
        /// </summary>
        internal static string CompanionWindow_VisionComboBox {
            get {
                return ResourceManager.GetString("CompanionWindow_VisionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically fail any ability checks. Attack rolls against your character have advantage, your attacks have disadvantage..
        /// </summary>
        internal static string ConditionsWindow_BlindedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_BlindedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character cannot attack the charmer. The charmer has advantage on ability checks when interacting socially..
        /// </summary>
        internal static string ConditionsWindow_CharmedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_CharmedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character cannot hear and automatically fails any ability check that requires hearing..
        /// </summary>
        internal static string ConditionsWindow_DeafenedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_DeafenedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character must succeed on 3 death saving throws, before failing 3. Succeeding will stabilize at 0 HP..
        /// </summary>
        internal static string ConditionsWindow_DeathCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_DeathCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the automatically calculated encumbrance status..
        /// </summary>
        internal static string ConditionsWindow_EncumbranceCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_EncumbranceCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A carry weight exceeding 5 and 10 times Strength will reduce speed by 10 and 20 respectively..
        /// </summary>
        internal static string ConditionsWindow_EncumbranceComboBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_EncumbranceComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some special abilities and environmental hazards, such as starvation and the long-term effects of freezing or scorching temperatures, can lead to exhaustion. Exhaustion is measured in six levels..
        /// </summary>
        internal static string ConditionsWindow_FatiguedComboBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_FatiguedComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character has disadvantage on Ability Checks and Attack rolls while the source of fear is within line of sight. You can’t willingly move closer to the source..
        /// </summary>
        internal static string ConditionsWindow_FrightenedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_FrightenedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character speed becomes 0. It ends when the grappler is incapacitated or you are thrown away..
        /// </summary>
        internal static string ConditionsWindow_GrappledCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_GrappledCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character cannot react or take an action..
        /// </summary>
        internal static string ConditionsWindow_IncapacitatedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_IncapacitatedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are impossible to see without the aid of magic or a Special sense. Attacks against you have disadvantage, your attacks have advantage..
        /// </summary>
        internal static string ConditionsWindow_InvisibleCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_InvisibleCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character is incapacitated and automatically fail Strength and Dexterity Saving Throws. Attacks have advantage, and melee are auto crit..
        /// </summary>
        internal static string ConditionsWindow_ParalyzedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_ParalyzedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms your character into an inanimate substance and are incapacitated. Resistant to all damage and immune to poison and disease..
        /// </summary>
        internal static string ConditionsWindow_PetrifiedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_PetrifiedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have disadvantage on Attack rolls and Ability Checks.
        /// </summary>
        internal static string ConditionsWindow_PoisonedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_PoisonedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your only movement option is to crawl like a little bitch and have disadvantage on attacks. Melee attack is advantage, ranged is disadvantage..
        /// </summary>
        internal static string ConditionsWindow_ProneCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_ProneCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your speed becomes 0. Your attacks have disadvantage, enemies have advantage. Dexterity Saving Throws are disadvantage..
        /// </summary>
        internal static string ConditionsWindow_RestrainedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_RestrainedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are incapacitated and speak falteringly, and automatically fail Strength and Dexterity Saving Throws. Attacks against have advantage..
        /// </summary>
        internal static string ConditionsWindow_StunnedCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_StunnedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character is incapacitated, drop what you&apos;re holding, and fall prone. Attacks against have advantage and hits are auto crit..
        /// </summary>
        internal static string ConditionsWindow_UnconsciousCheckBox {
            get {
                return ResourceManager.GetString("ConditionsWindow_UnconsciousCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item will be removed from your inventory to this page..
        /// </summary>
        internal static string EquipmentWindow_ItemComboBox {
            get {
                return ResourceManager.GetString("EquipmentWindow_ItemComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a location to equip the item to your character..
        /// </summary>
        internal static string EquipmentWindow_SlotComboBox {
            get {
                return ResourceManager.GetString("EquipmentWindow_SlotComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dice Set
        ///Dragonchess Set
        ///Playing Card Set
        ///Three-Dragon Ante Set.
        /// </summary>
        internal static string Game {
            get {
                return ResourceManager.GetString("Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Glossary {
            get {
                object obj = ResourceManager.GetObject("Glossary", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current health from your pool remaining..
        /// </summary>
        internal static string HealthWindow_CurrentHpUpDown {
            get {
                return ResourceManager.GetString("HealthWindow_CurrentHpUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary bonus to HP. This might allow you to increase health beyond the normal maximum. Damage will drain from this pool first..
        /// </summary>
        internal static string HealthWindow_TemporaryHpUpDown {
            get {
                return ResourceManager.GetString("HealthWindow_TemporaryHpUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum health your character can heal to..
        /// </summary>
        internal static string HealthWindow_TotalHpUpDown {
            get {
                return ResourceManager.GetString("HealthWindow_TotalHpUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] hey_whats_going_on {
            get {
                object obj = ResourceManager.GetObject("hey-whats-going-on", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum d10 hit dice available to be spent..
        /// </summary>
        internal static string HitDiceWindow_TotalD10UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_TotalD10UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum d12 hit dice available to be spent..
        /// </summary>
        internal static string HitDiceWindow_TotalD12UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_TotalD12UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum d6 hit dice available to be spent..
        /// </summary>
        internal static string HitDiceWindow_TotalD6UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_TotalD6UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum d8 hit dice available to be spent..
        /// </summary>
        internal static string HitDiceWindow_TotalD8UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_TotalD8UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend one or more d10 at the end of a short rest, up to the maximum..
        /// </summary>
        internal static string HitDiceWindow_UsedD10UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_UsedD10UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend one or more d12 at the end of a short rest, up to the maximum..
        /// </summary>
        internal static string HitDiceWindow_UsedD12UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_UsedD12UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend one or more d6 at the end of a short rest, up to the maximum..
        /// </summary>
        internal static string HitDiceWindow_UsedD6UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_UsedD6UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend one or more d8 at the end of a short rest, up to the maximum..
        /// </summary>
        internal static string HitDiceWindow_UsedD8UpDown {
            get {
                return ResourceManager.GetString("HitDiceWindow_UsedD8UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of healing or damage to take. 10 points to Gryffindor!.
        /// </summary>
        internal static string HpWindow_HpUpDown {
            get {
                return ResourceManager.GetString("HpWindow_HpUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the stored image from the character sheet. .
        /// </summary>
        internal static string ImageWindow_ClearImageButton {
            get {
                return ResourceManager.GetString("ImageWindow_ClearImageButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change how the image is stretched to fill the canvas..
        /// </summary>
        internal static string ImageWindow_FillTypeComboBox {
            get {
                return ResourceManager.GetString("ImageWindow_FillTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can safely delete the image after loading it into Concierge..
        /// </summary>
        internal static string ImageWindow_OpenImageButton {
            get {
                return ResourceManager.GetString("ImageWindow_OpenImageButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unchecking this won&apos;t delete a selected image..
        /// </summary>
        internal static string ImageWindow_UseCustomImageCheckBox {
            get {
                return ResourceManager.GetString("ImageWindow_UseCustomImageCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bagpipes
        ///Drum
        ///Dulcimer
        ///Flute
        ///Horn
        ///Lute
        ///Lyre
        ///Pan Flute
        ///Shawm
        ///Viol.
        /// </summary>
        internal static string Instrument {
            get {
                return ResourceManager.GetString("Instrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Inventory {
            get {
                object obj = ResourceManager.GetObject("Inventory", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eating Sixty-four slices of American Cheese might make you blind..
        /// </summary>
        internal static string InventoryWindow_AmountUpDown {
            get {
                return ResourceManager.GetString("InventoryWindow_AmountUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend time attuning to this item, allowing the use of special abilities. Your character can only attune to 3 items at a time..
        /// </summary>
        internal static string InventoryWindow_AttunedCheckBox {
            get {
                return ResourceManager.GetString("InventoryWindow_AttunedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the type of gear being carried..
        /// </summary>
        internal static string InventoryWindow_CategoryComboBox {
            get {
                return ResourceManager.GetString("InventoryWindow_CategoryComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the denomination so you don&apos;t have to worry about math..
        /// </summary>
        internal static string InventoryWindow_CoinTypeComboBox {
            get {
                return ResourceManager.GetString("InventoryWindow_CoinTypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the amount should decrease when the item is used..
        /// </summary>
        internal static string InventoryWindow_ConsumableCheckBox {
            get {
                return ResourceManager.GetString("InventoryWindow_ConsumableCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Describe, in detail, why your character looted this item..
        /// </summary>
        internal static string InventoryWindow_DescriptionTextBox {
            get {
                return ResourceManager.GetString("InventoryWindow_DescriptionTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is generally used to &apos;place&apos; the item in a bag of holding..
        /// </summary>
        internal static string InventoryWindow_IgnoreWeightCheckBox {
            get {
                return ResourceManager.GetString("InventoryWindow_IgnoreWeightCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All item names are made up, if you stop to think about it..
        /// </summary>
        internal static string InventoryWindow_NameComboBox {
            get {
                return ResourceManager.GetString("InventoryWindow_NameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Informs at a glance what this item is good for..
        /// </summary>
        internal static string InventoryWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("InventoryWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The worth of this item. Lisa, I&apos;d like to buy your rock..
        /// </summary>
        internal static string InventoryWindow_ValueUpDown {
            get {
                return ResourceManager.GetString("InventoryWindow_ValueUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is this item portable or luggable?.
        /// </summary>
        internal static string InventoryWindow_WeightUpDown {
            get {
                return ResourceManager.GetString("InventoryWindow_WeightUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When we last left our heroes, Sir Schmoopy and Eluamus Nailo were searching for a magical herb to cure Schmoopy&apos;s dying grandmother....
        /// </summary>
        internal static string JournalWindow_DocumentTextBox {
            get {
                return ResourceManager.GetString("JournalWindow_DocumentTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Language {
            get {
                object obj = ResourceManager.GetObject("Language", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Race indicates the languages a character can speak by default, and a background might give access to one or more additional languages..
        /// </summary>
        internal static string LanguagesWindow_NameComboBox {
            get {
                return ResourceManager.GetString("LanguagesWindow_NameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The style of characters are used to write this language. Some languages are only spoken, and may not have a unique script..
        /// </summary>
        internal static string LanguagesWindow_ScriptTextBox {
            get {
                return ResourceManager.GetString("LanguagesWindow_ScriptTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The races that are likely to speak a given language..
        /// </summary>
        internal static string LanguagesWindow_SpeakersTextBox {
            get {
                return ResourceManager.GetString("LanguagesWindow_SpeakersTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 300
        ///900
        ///2700
        ///6500
        ///14000
        ///23000
        ///34000
        ///48000
        ///64000
        ///85000
        ///100000
        ///120000
        ///140000
        ///165000
        ///195000
        ///225000
        ///265000
        ///305000
        ///355000
        ///0.
        /// </summary>
        internal static string LevelExp {
            get {
                return ResourceManager.GetString("LevelExp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] MagicClass {
            get {
                object obj = ResourceManager.GetObject("MagicClass", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ability used by the class to cast spells. For example Wizards, Artificers, and Druids are magic users that cast with Intelligence and Wisdom. .
        /// </summary>
        internal static string MagicClassWindow_AbilityComboBox {
            get {
                return ResourceManager.GetString("MagicClassWindow_AbilityComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of cantrips known the class at this level. These do not burn a spell slots when used..
        /// </summary>
        internal static string MagicClassWindow_CantripsUpDown {
            get {
                return ResourceManager.GetString("MagicClassWindow_CantripsUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choosing the right class for yourself AND your character will dictate the effectiveness of your character’s career..
        /// </summary>
        internal static string MagicClassWindow_ClassNameComboBox {
            get {
                return ResourceManager.GetString("MagicClassWindow_ClassNameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This class level determines the amount of usable spell slots, as well as the maximum spell level available..
        /// </summary>
        internal static string MagicClassWindow_LevelUpDown {
            get {
                return ResourceManager.GetString("MagicClassWindow_LevelUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of total spells known to the class at this level..
        /// </summary>
        internal static string MagicClassWindow_SpellsUpDown {
            get {
                return ResourceManager.GetString("MagicClassWindow_SpellsUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Names {
            get {
                object obj = ResourceManager.GetObject("Names", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonds represent a character&apos;s connections to people, places, and events in the world..
        /// </summary>
        internal static string PersonalityWindow_BondTextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_BondTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character flaws represent some vice, compulsion, fear, or weakness. Anything that someone else could exploit to cause you to act against your best interests..
        /// </summary>
        internal static string PersonalityWindow_FlawTextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_FlawTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ideals are things that you believe in most strongly, the fundamental moral and ethical principles that compel you to act as you do..
        /// </summary>
        internal static string PersonalityWindow_IdealTextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_IdealTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra descriptions about a character&apos;s history..
        /// </summary>
        internal static string PersonalityWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to They should be self-descriptions that are specific about what makes a character stand out..
        /// </summary>
        internal static string PersonalityWindow_Trait1TextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_Trait1TextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to They should be self-descriptions that are specific about what makes a character stand out..
        /// </summary>
        internal static string PersonalityWindow_Trait2TextBox {
            get {
                return ResourceManager.GetString("PersonalityWindow_Trait2TextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A character can be proficient in armors, weapons, or tools..
        /// </summary>
        internal static string ProficiencyWindow_ProficiencyComboBox {
            get {
                return ResourceManager.GetString("ProficiencyWindow_ProficiencyComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the armors, weapons, or tools that a characters is proficient in..
        /// </summary>
        internal static string ProficiencyWindow_ProficiencyTextComboBox {
            get {
                return ResourceManager.GetString("ProficiencyWindow_ProficiencyTextComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A typical creature in the game world has an alignment, which broadly describes its moral and personal attitudes. Alignment is a combination of two factors: one identifies morality, and the other describes attitudes toward society and order..
        /// </summary>
        internal static string PropertiesWindow_AlignmentComboBox {
            get {
                return ResourceManager.GetString("PropertiesWindow_AlignmentComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every story has a beginning. Your character’s background reveals where you came from, how you became an adventurer, and your place in the world..
        /// </summary>
        internal static string PropertiesWindow_BackgroundComboBox {
            get {
                return ResourceManager.GetString("PropertiesWindow_BackgroundComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every adventurer is a member of a class. Class broadly describes a character’s vocation, what special talents he or she possesses, and the tactics he or she is most likely to employ..
        /// </summary>
        internal static string PropertiesWindow_Class1Class {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class1Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Typically, a character starts at 1st level and advances in level by adventuring and gaining experience points. A 1st-level character is inexperienced in the adventuring world.
        /// </summary>
        internal static string PropertiesWindow_Class1Level {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class1Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class is the primary definition of what your character can do, and Subclass refines it. It’s more than a profession; it’s your character’s calling..
        /// </summary>
        internal static string PropertiesWindow_Class1Subclass {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class1Subclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every adventurer is a member of a class. Class broadly describes a character’s vocation, what special talents he or she possesses, and the tactics he or she is most likely to employ..
        /// </summary>
        internal static string PropertiesWindow_Class2Class {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class2Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Typically, a character starts at 1st level and advances in level by adventuring and gaining experience points. A 1st-level character is inexperienced in the adventuring world.
        /// </summary>
        internal static string PropertiesWindow_Class2Level {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class2Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class is the primary definition of what your character can do, and Subclass refines it. It’s more than a profession; it’s your character’s calling..
        /// </summary>
        internal static string PropertiesWindow_Class2Subclass {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class2Subclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every adventurer is a member of a class. Class broadly describes a character’s vocation, what special talents he or she possesses, and the tactics he or she is most likely to employ..
        /// </summary>
        internal static string PropertiesWindow_Class3Class {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class3Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Typically, a character starts at 1st level and advances in level by adventuring and gaining experience points. A 1st-level character is inexperienced in the adventuring world.
        /// </summary>
        internal static string PropertiesWindow_Class3Level {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class3Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class is the primary definition of what your character can do, and Subclass refines it. It’s more than a profession; it’s your character’s calling..
        /// </summary>
        internal static string PropertiesWindow_Class3Subclass {
            get {
                return ResourceManager.GetString("PropertiesWindow_Class3Subclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your character’s race description includes sample names for members of that race. Put some thought into your name even if you’re just picking one from a list..
        /// </summary>
        internal static string PropertiesWindow_NameTextBox {
            get {
                return ResourceManager.GetString("PropertiesWindow_NameTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every character belongs to a race, one of the many intelligent humanoid species in the D&amp;D world. The most common player character races are dwarves, elves, halflings, and humans..
        /// </summary>
        internal static string PropertiesWindow_RaceComboBox {
            get {
                return ResourceManager.GetString("PropertiesWindow_RaceComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just like the common Antelope can have differences within their species, some races also have subraces, such as mountain dwarf or wood elf..
        /// </summary>
        internal static string PropertiesWindow_SubRaceComboBox {
            get {
                return ResourceManager.GetString("PropertiesWindow_SubRaceComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Race {
            get {
                object obj = ResourceManager.GetObject("Race", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Resource {
            get {
                object obj = ResourceManager.GetObject("Resource", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string ResourceValidation {
            get {
                return ResourceManager.GetString("ResourceValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a charisma saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_CharismaComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_CharismaComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a constitution saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_ConstitutionComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_ConstitutionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a dexterity saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_DexterityComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_DexterityComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an intelligence saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_IntelligenceComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_IntelligenceComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a strength saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_StrengthComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_StrengthComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a wisdom saving throw will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SavingThrowWindow_WisdomComboBox {
            get {
                return ResourceManager.GetString("SavingThrowWindow_WisdomComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distance a character can walk in 1 round. This number assumes short bursts of energetic movement in the midst of a life-threatening situation..
        /// </summary>
        internal static string SensesWindow_BaseMovementUpDown {
            get {
                return ResourceManager.GetString("SensesWindow_BaseMovementUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intitiative determines the order of a turn during combat. A dexterity check sets a place in the initiative order..
        /// </summary>
        internal static string SensesWindow_InitiativeBonusUpDown {
            get {
                return ResourceManager.GetString("SensesWindow_InitiativeBonusUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inspiration dice are granted by the DM as a reward for roleplaying a character in a way that reflects their bonds, flaws, ideals, and personality traits..
        /// </summary>
        internal static string SensesWindow_InspirationCheckBox {
            get {
                return ResourceManager.GetString("SensesWindow_InspirationCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional increase to a players maximum movement speed..
        /// </summary>
        internal static string SensesWindow_MovementBonusUpDown {
            get {
                return ResourceManager.GetString("SensesWindow_MovementBonusUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A characters ability to automatically notice details of their surroundings. This does not require a die roll..
        /// </summary>
        internal static string SensesWindow_PerceptionBonusUpDown {
            get {
                return ResourceManager.GetString("SensesWindow_PerceptionBonusUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most fundamental tasks of adventuring--noticing danger, finding hidden objects, hitting an enemy in combat, and targeting a spell, to name just a few--rely heavily on a character&apos;s ability to see..
        /// </summary>
        internal static string SensesWindow_VisionComboBox {
            get {
                return ResourceManager.GetString("SensesWindow_VisionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concierge will automatically save at the set interval. This will always overwrite the current character..
        /// </summary>
        internal static string SettingsWindow_AutosaveCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_AutosaveCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the interval in minutes between autosaves..
        /// </summary>
        internal static string SettingsWindow_AutosaveInterval {
            get {
                return ResourceManager.GetString("SettingsWindow_AutosaveInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will check if a character was saved with a different major or minor version of Concierge..
        /// </summary>
        internal static string SettingsWindow_CheckVersionCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_CheckVersionCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if your money will weight you down..
        /// </summary>
        internal static string SettingsWindow_CoinWeightCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_CoinWeightCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will always open characters from the same directory..
        /// </summary>
        internal static string SettingsWindow_DefaultOpenCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_DefaultOpenCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will always save characters to the same directory..
        /// </summary>
        internal static string SettingsWindow_DefaultSaveCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_DefaultSaveCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use encumbrance rules for your carry weight, based on the characters strength attribute..
        /// </summary>
        internal static string SettingsWindow_EncumbranceCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_EncumbranceCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set how the text in the header bar is alighned. Everyone has different preferences..
        /// </summary>
        internal static string SettingsWindow_HeaderAlignmentComboBox {
            get {
                return ResourceManager.GetString("SettingsWindow_HeaderAlignmentComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits healing from rolling hit dice during a short rest. Will only regain hp until reaching the threshold. 100% will heal fully, 0% will disable auto healing..
        /// </summary>
        internal static string SettingsWindow_HealingThreshold {
            get {
                return ResourceManager.GetString("SettingsWindow_HealingThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle if button clicks and warning messages will play sound..
        /// </summary>
        internal static string SettingsWindow_MuteCheckBox {
            get {
                return ResourceManager.GetString("SettingsWindow_MuteCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default folder location for the &quot;Open&quot; dialog..
        /// </summary>
        internal static string SettingsWindow_OpenTextBox {
            get {
                return ResourceManager.GetString("SettingsWindow_OpenTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default folder location for the &quot;Save&quot; dialog..
        /// </summary>
        internal static string SettingsWindow_SaveTextBox {
            get {
                return ResourceManager.GetString("SettingsWindow_SaveTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D&amp;D is unfortunatly designed for feet and pounds, but metric is always an option..
        /// </summary>
        internal static string SettingsWindow_UnitOfMeasurementComboBox {
            get {
                return ResourceManager.GetString("SettingsWindow_UnitOfMeasurementComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the application colume level when not muted..
        /// </summary>
        internal static string SettingsWindow_VolumeSlider {
            get {
                return ResourceManager.GetString("SettingsWindow_VolumeSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an acrobatics check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_AcrobaticsComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_AcrobaticsComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an animal handling check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_AnimalHandlingComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_AnimalHandlingComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an arcana check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_ArcanaComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_ArcanaComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an athletics check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_AthleticsComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_AthleticsComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a deception check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_DeceptionComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_DeceptionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a history check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_HistoryComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_HistoryComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an insight check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_InsightComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_InsightComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an intimidation check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_IntimidationComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_IntimidationComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if an investigation check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_InvestigationComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_InvestigationComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a medicine check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_MedicineComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_MedicineComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a nature check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_NatureComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_NatureComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a perception check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_PerceptionComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_PerceptionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a performance check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_PerformanceComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_PerformanceComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a persuasion check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_PersuasionComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_PersuasionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a religion check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_ReligionComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_ReligionComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a sleight of hand check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_SleightOfHandComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_SleightOfHandComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a stealth check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_StealthComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_StealthComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if a survival check will have no bonuses, advantage, disadvantage, always fail, or will automatically be set..
        /// </summary>
        internal static string SkillWindow_SurvivalComboBox {
            get {
                return ResourceManager.GetString("SkillWindow_SurvivalComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Spell {
            get {
                object obj = ResourceManager.GetObject("Spell", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 1st level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total1UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total1UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 2nd level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total2UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total2UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 3rd level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total3UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total3UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 4th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total4UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total4UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 5th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total5UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total5UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 6th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total6UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total6UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 7th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total7UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total7UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 8th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total8UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total8UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable 9th level spells..
        /// </summary>
        internal static string SpellSlotsWindow_Total9UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Total9UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of usable Pact spells..
        /// </summary>
        internal static string SpellSlotsWindow_TotalPactUpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_TotalPactUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 1st level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used1UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used1UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 2nd level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used2UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used2UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 3rd level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used3UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used3UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 4th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used4UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used4UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 5th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used5UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used5UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 6th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used6UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used6UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 7th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used7UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used7UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 8th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used8UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used8UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining 9th level spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_Used9UpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_Used9UpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of remaining Pact spell slots..
        /// </summary>
        internal static string SpellSlotsWindow_UsedPactUpDown {
            get {
                return ResourceManager.GetString("SpellSlotsWindow_UsedPactUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Typically will be one of five different shapes: cone, cube, cylinder, line, or sphere..
        /// </summary>
        internal static string SpellWindow_AreaTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_AreaTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magic class this spell is associated with. This allows auto-calculating of certain values..
        /// </summary>
        internal static string SpellWindow_ClassComboBox {
            get {
                return ResourceManager.GetString("SpellWindow_ClassComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spell&apos;s components are the physical requirements you must meet in order to cast it. Each spell&apos;s description indicates whether it requires verbal (V), somatic (S), or material (M) components..
        /// </summary>
        internal static string SpellWindow_ComponentsTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_ComponentsTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some spells require you to maintain concentration in order to keep their magic active. If you lose concentration, such a spell ends..
        /// </summary>
        internal static string SpellWindow_ConcentrationCheckBox {
            get {
                return ResourceManager.GetString("SpellWindow_ConcentrationCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your attack bonus with a spell attack equals your spellcasting ability modifier + your proficiency bonus..
        /// </summary>
        internal static string SpellWindow_DamageTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_DamageTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spell&apos;s duration is the length of time the spell persists. A duration can be expressed in rounds, minutes, hours, or even years. Some spells specify that their effects last until the spells are dispelled or destroyed..
        /// </summary>
        internal static string SpellWindow_DurationTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_DurationTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every spell has a level from 0 to 9. A spell&apos;s level is a general indicator of how powerful it is, with the lowly (but still impressive) magic missile at 1st level and the earth-shaking wish at 9th..
        /// </summary>
        internal static string SpellWindow_LevelUpDown {
            get {
                return ResourceManager.GetString("SpellWindow_LevelUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spells can be versatile tools, weapons, or protective wards. They can deal damage or undo it, impose or remove conditions, drain life energy away, and restore life to the dead..
        /// </summary>
        internal static string SpellWindow_NotesTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_NotesTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before a spellcaster can use a spell, he or she must have the spell firmly fixed in mind, or must have access to the spell in a magic item..
        /// </summary>
        internal static string SpellWindow_PreparedCheckBox {
            get {
                return ResourceManager.GetString("SpellWindow_PreparedCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target of a spell must be within the spell&apos;s range. For a spell like magic missile, the target is a creature. For a spell like fireball, the target is the point in space where the ball of fire erupts..
        /// </summary>
        internal static string SpellWindow_RangeTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_RangeTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some spells might be class or race abilitites, and not require expending spell slots in order to cast..
        /// </summary>
        internal static string SpellWindow_RequireSpellSlotCheckBox {
            get {
                return ResourceManager.GetString("SpellWindow_RequireSpellSlotCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ritual version of a spell takes 10 minutes longer to cast than normal. It also doesn&apos;t expend a spell slot, which means the ritual version of a spell can&apos;t be cast at a higher level..
        /// </summary>
        internal static string SpellWindow_RitualCheckBox {
            get {
                return ResourceManager.GetString("SpellWindow_RitualCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DC to resist one of your spells equals 8 + your spellcasting ability modifier + your proficiency bonus + any special modifiers..
        /// </summary>
        internal static string SpellWindow_SaveTextBox {
            get {
                return ResourceManager.GetString("SpellWindow_SaveTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Academies of magic group spells into eight categories called schools of magic. These help describe spells; they have no rules of their own, although some rules refer to the schools..
        /// </summary>
        internal static string SpellWindow_SchoolComboBox {
            get {
                return ResourceManager.GetString("SpellWindow_SchoolComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A discrete magical effect, a single shaping of the magical energies that suffuse the multiverse into a specific, limited expression..
        /// </summary>
        internal static string SpellWindow_SpellNameComboBox {
            get {
                return ResourceManager.GetString("SpellWindow_SpellNameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] StatusEffect {
            get {
                object obj = ResourceManager.GetObject("StatusEffect", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resistance and then vulnerability are applied after all other modifiers to damage. Multiple instances of resistance or vulnerability that affect the same damage type count as only one instance..
        /// </summary>
        internal static string StatusEffectsWindow_DescriptionTextBox {
            get {
                return ResourceManager.GetString("StatusEffectsWindow_DescriptionTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some creatures and objects are exceedingly difficult or unusually easy to hurt with certain types of damage..
        /// </summary>
        internal static string StatusEffectsWindow_NameComboBox {
            get {
                return ResourceManager.GetString("StatusEffectsWindow_NameComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Having resistance to a damage type, damage of that type is halved against it. If a creature or an object has vulnerability to a damage type, damage of that type is doubled against it..
        /// </summary>
        internal static string StatusEffectsWindow_TypeComboBox {
            get {
                return ResourceManager.GetString("StatusEffectsWindow_TypeComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Subclass {
            get {
                object obj = ResourceManager.GetObject("Subclass", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Subrace {
            get {
                object obj = ResourceManager.GetObject("Subrace", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alchemist&apos;s Supplies
        ///Brewer&apos;s Supplies
        ///Calligrapher&apos;s Supplies
        ///Carpenter&apos;s Tools
        ///Cartographer&apos;s Tools
        ///Cobbler&apos;s Tools
        ///Disguise Kit
        ///Forgery Kit
        ///Glassblower&apos;s Tools
        ///Herbalism Kit
        ///Herbalism Kit
        ///Leatherworker&apos;s Tools
        ///Mason&apos;s Tools
        ///Navigator&apos;s Tools
        ///Painter&apos;s Supplies
        ///Poisoner&apos;s kit
        ///Potter&apos;s Tools
        ///Smith&apos;s Tools
        ///Thieves&apos; Tools
        ///Tinker&apos;s Tools
        ///Weaver&apos;s Tools
        ///Woodcarver&apos;s Tools.
        /// </summary>
        internal static string Tool {
            get {
                return ResourceManager.GetString("Tool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add 1000 coins to the value..
        /// </summary>
        internal static string WealthWindow_Add1000Button {
            get {
                return ResourceManager.GetString("WealthWindow_Add1000Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add 100 coins to the value..
        /// </summary>
        internal static string WealthWindow_Add100Button {
            get {
                return ResourceManager.GetString("WealthWindow_Add100Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add 10 coins to the value..
        /// </summary>
        internal static string WealthWindow_Add10Button {
            get {
                return ResourceManager.GetString("WealthWindow_Add10Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add 1 coin to the value..
        /// </summary>
        internal static string WealthWindow_Add1Button {
            get {
                return ResourceManager.GetString("WealthWindow_Add1Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wealth appears in many forms in the world. Coins, gemstones, trade goods, art objects, animals, and property can reflect your character’s financial well-being..
        /// </summary>
        internal static string WealthWindow_AmountUpDown {
            get {
                return ResourceManager.GetString("WealthWindow_AmountUpDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One silver piece is worth ten copper pieces, which are common among laborers and beggars. A single copper piece buys a candle, a torch, or a piece of chalk..
        /// </summary>
        internal static string WealthWindow_CpRadioButton {
            get {
                return ResourceManager.GetString("WealthWindow_CpRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The electrum piece originates from fallen empires and lost kingdoms, and they sometimes arouse suspicion and skepticism when used in transactions. An electrum piece is worth five silver pieces..
        /// </summary>
        internal static string WealthWindow_EpRadioButton {
            get {
                return ResourceManager.GetString("WealthWindow_EpRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With one gold piece, a character can buy a bedroll or 50 feet of good rope. A skilled artisan can earn one gold piece a day. The gold piece is the standard unit of measure for wealth, even if the coin itself is not commonly used..
        /// </summary>
        internal static string WealthWindow_GpRadioButton {
            get {
                return ResourceManager.GetString("WealthWindow_GpRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Why couldn&apos;t I have 3 money and no kids?.
        /// </summary>
        internal static string WealthWindow_MinusButton {
            get {
                return ResourceManager.GetString("WealthWindow_MinusButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Money can be exchanged for goods and services..
        /// </summary>
        internal static string WealthWindow_PlusButton {
            get {
                return ResourceManager.GetString("WealthWindow_PlusButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The platinum piece originates from fallen empires and lost kingdoms, and they sometimes arouse suspicion and skepticism when used in transactions. A platinum piece is worth ten gold pieces..
        /// </summary>
        internal static string WealthWindow_PpRadioButton {
            get {
                return ResourceManager.GetString("WealthWindow_PpRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One gold piece is worth ten silver pieces, the most prevalent coin among commoners. A silver piece buys a laborer&apos;s work for half a day, a flask of lamp oil, or a night&apos;s rest in a poor inn..
        /// </summary>
        internal static string WealthWindow_SpRadioButton {
            get {
                return ResourceManager.GetString("WealthWindow_SpRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Weapon {
            get {
                object obj = ResourceManager.GetObject("Weapon", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
