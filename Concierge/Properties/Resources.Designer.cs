//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Concierge.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Concierge.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Ammunitions&gt;
        ///  &lt;Ammunition name=&quot;Arrows&quot; qty=&quot;20&quot; /&gt;
        ///  &lt;Ammunition name=&quot;Blowgun needles&quot; qty=&quot;50&quot; /&gt;
        ///  &lt;Ammunition name=&quot;Crossbow bolts&quot; qty=&quot;20&quot; /&gt;
        ///  &lt;Ammunition name=&quot;Shuriken&quot; qty=&quot;10&quot; /&gt;
        ///  &lt;Ammunition name=&quot;Sling bullets&quot; qty=&quot;20&quot; /&gt;
        ///&lt;/Ammunitions&gt;.
        /// </summary>
        internal static string AmmoList {
            get {
                return ResourceManager.GetString("AmmoList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap armor_class_icon {
            get {
                object obj = ResourceManager.GetObject("armor_class_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Caleston {
            get {
                object obj = ResourceManager.GetObject("Caleston", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon dndnextlogo {
            get {
                object obj = ResourceManager.GetObject("dndnextlogo", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Items&gt;
        ///  &lt;Item name=&quot;Abacus&quot; weight=&quot;2&quot; notes=&quot;A standard tool used to make calculations.&quot; /&gt;
        ///  &lt;Item name=&quot;Acid (vial)&quot; weight=&quot;1&quot; notes=&quot;As an action, you can splash the contents of this vial onto a creature within 5 feet of you or throw the vial up to 20 feet, shattering it on impact. In either case, make a ranged attack against a creature or object, treating the acid as an improvised weapon. On a hit, the target takes 2d6 acid damage.&quot; /&gt;
        ///  &lt;Item name=&quot;Alchem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ItemList {
            get {
                return ResourceManager.GetString("ItemList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Languages&gt;
        ///  &lt;Language Name=&quot;Abyssal&quot; Script=&quot;Infernal&quot; Speakers=&quot;Demons, chaotic evil outsiders&quot;/&gt;
        ///  &lt;Language Name=&quot;Aquan&quot; Script=&quot;Elven&quot; Speakers=&quot;Water-based creatures&quot;/&gt;
        ///  &lt;Language Name=&quot;Auran&quot; Script=&quot;Draconic&quot; Speakers=&quot;Air-based creatures&quot;/&gt;
        ///  &lt;Language Name=&quot;Celestial&quot; Script=&quot;Celestial&quot; Speakers=&quot;Celestials (angels, devas)&quot;/&gt;
        ///  &lt;Language Name=&quot;Common&quot; Script=&quot;Common&quot; Speakers=&quot;Humans, halflings, half-elves, half-orcs&quot;/&gt;
        ///  &lt;Language Name=&quot;Deep Speech [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LanguageList {
            get {
                return ResourceManager.GetString("LanguageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Spells&gt;
        ///  &lt;Spell name=&quot;Acid Splash&quot; level=&quot;Cantrip&quot; page=&quot;211&quot; school=&quot;Conjuration&quot; ritual=&quot;No&quot; comp=&quot;V, S&quot; concen=&quot;No&quot; range=&quot;60 ft.&quot; duration=&quot;Instantaneous&quot; area=&quot;1 or 2 adjacent targets&quot; save=&quot;DEX (Fail)&quot; damage=&quot;1d6 Acid&quot; description=&quot;DAM: Add extra 1d6 at 5th level, 11th level, and 17th level.&quot; prepared=&quot;No&quot; /&gt;
        ///  &lt;Spell name=&quot;Aid&quot; level=&quot;2&quot; page=&quot;211&quot; school=&quot;Abjuration&quot; ritual=&quot;No&quot; comp=&quot;V, S, M (white cloth strip)&quot; concen=&quot;No&quot; range=&quot;30 ft.&quot; duration=&quot;8 hou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpellList {
            get {
                return ResourceManager.GetString("SpellList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Weapons&gt;
        ///  &lt;Weapon name=&quot;Battleaxe&quot; damage=&quot;1d8&quot; type=&quot;Slashing&quot; weight=&quot;4&quot; range=&quot;5 / 5&quot; notes=&quot;Versatile(1d10)&quot;/&gt;
        ///  &lt;Weapon name=&quot;Blowgun&quot; damage=&quot;1&quot; type=&quot;Piercing&quot; weight=&quot;1&quot; range=&quot;25 / 100&quot; notes=&quot;Ammunition, loading&quot;/&gt;
        ///  &lt;Weapon name=&quot;Club&quot; damage=&quot;1d4&quot; type=&quot;Bludgeoning&quot; weight=&quot;2&quot; range=&quot;5 / 5&quot; notes=&quot;Light&quot;/&gt;
        ///  &lt;Weapon name=&quot;Dagger&quot; damage=&quot;1d4&quot; type=&quot;Piercing&quot; weight=&quot;1&quot; range=&quot;20 / 60&quot; notes=&quot;Finesse, light, thrown&quot;/&gt;
        ///  &lt;Weapon name=&quot;Dart&quot; damage=&quot;1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WeaponList {
            get {
                return ResourceManager.GetString("WeaponList", resourceCulture);
            }
        }
    }
}
